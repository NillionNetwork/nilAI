services:
  caddy:
    env_file:
      - .env
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile
  api:
    platform: linux/amd64 # for macOS to force running on Rosetta 2
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy

    env_file:
      - .env
    volumes:
      - ./nilai-api/:/app/nilai-api/
      - ./packages/:/app/packages/
      - ./nilai-auth/nuc-helpers/:/app/nilai-auth/nuc-helpers/
  nuc-api:
    platform: linux/amd64 # for macOS to force running on Rosetta 2
    ports:
      - "8088:8080"
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      nilauth-credit-server:
        condition: service_healthy
    environment:
      - POSTGRES_DB=${POSTGRES_DB_NUC}
    volumes:
      - ./nilai-api/:/app/nilai-api/
      - ./packages/:/app/packages/
      - ./nilai-auth/nuc-helpers/:/app/nilai-auth/nuc-helpers/
  redis:
    ports:
      - "6379:6379"
  postgres:
    image: postgres:16
    container_name: postgres
    restart: always
    ports:
      - "5432:5432"
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/postgres-init.sh:/docker-entrypoint-initdb.d/postgres-init.sh
    healthcheck:
      test: ["CMD", "sh", "-c", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} -h localhost"]
      interval: 30s
      retries: 5
      start_period: 10s
      timeout: 10s
  grafana:
    container_name: grafana
    image: 'grafana/grafana:11.5.1'
    restart: unless-stopped
    user: "$UID:$GID"
    depends_on:
      - prometheus
    environment:
      - GF_USERS_ALLOW_SIGN_UP=false
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    env_file:
      - .env
    ports:
      - "3000:3000"
    volumes:
      - ${PWD}/grafana/runtime-data:/var/lib/grafana
      - ${PWD}/grafana/datasources/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
      - ${PWD}/grafana/dashboards/filesystem.yml:/etc/grafana/provisioning/dashboards/filesystem.yml
      - ${PWD}/grafana/config/grafana.ini:/etc/grafana/grafana.ini
  nilauth-postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: nilauth
      POSTGRES_PASSWORD: nilauth_dev_password
      POSTGRES_DB: nilauth_credit
    ports:
      - "30432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U nilauth -d nilauth_credit"]
      interval: 5s
      timeout: 5s
      retries: 5

  nilauth-credit-server:
    image: ghcr.io/nillionnetwork/nilauth-credit:sha-cb9e36a
    environment:
      DATABASE_URL: postgresql://nilauth:nilauth_dev_password@nilauth-postgres:5432/nilauth_credit
      HOST: 0.0.0.0
      PORT: 3000
    ports:
      - "3030:3000"
    depends_on:
      nilauth-postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      retries: 3
      start_period: 15s
      timeout: 10s
volumes:
  postgres_data:
