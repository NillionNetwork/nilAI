services:
  caddy:
    env_file:
      - .env
    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile
  api:
    platform: linux/amd64 # for macOS to force running on Rosetta 2
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy

    env_file:
      - .env
    volumes:
      - ./nilai-api/:/app/nilai-api/
      - ./packages/:/app/packages/
      - ./nilai-auth/nuc-helpers/:/app/nilai-auth/nuc-helpers/
  nuc-api:
    platform: linux/amd64 # for macOS to force running on Rosetta 2
    ports:
      - "8088:8080"
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - POSTGRES_DB=${POSTGRES_DB_NUC}
    volumes:
      - ./nilai-api/:/app/nilai-api/
      - ./packages/:/app/packages/
      - ./nilai-auth/nuc-helpers/:/app/nilai-auth/nuc-helpers/
  attestation:
    ports:
      - "8081:8080"
    env_file:
      - .env
    volumes:
      - ./nilai-attestation/:/app/nilai-attestation/
      - ./packages/:/app/packages/
  redis:
    ports:
      - "6379:6379"
  postgres:
    image: postgres:16
    container_name: postgres
    restart: always
    ports:
      - "5432:5432"
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/postgres-init.sh:/docker-entrypoint-initdb.d/postgres-init.sh
    healthcheck:
      test: ["CMD", "sh", "-c", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} -h localhost"]
      interval: 30s
      retries: 5
      start_period: 10s
      timeout: 10s
  grafana:
    env_file:
      - .env
    ports:
      - "3000:3000"
    volumes:
      - ${PWD}/grafana/runtime-data:/var/lib/grafana
      - ${PWD}/grafana/datasources/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
      - ${PWD}/grafana/dashboards/filesystem.yml:/etc/grafana/provisioning/dashboards/filesystem.yml
      - ${PWD}/grafana/config/grafana.ini:/etc/grafana/grafana.ini
  prometheus:
    volumes:
      - ${PWD}/prometheus/config/prometheus.yml:/etc/prometheus/prometheus.yml
      - ${PWD}/prometheus/data:/prometheus/data
  nilauth-postgres:
    image: postgres:17
    environment:
      POSTGRES_PASSWORD: postgres
    ports:
      - "30432:5432"

  nilchain:
    image: ghcr.io/nillionnetwork/nilchain-devnet:v0.1.0
    restart: unless-stopped
    shm_size: 128mb
    ports:
      - "26648:26648" # JSON RPC
      - "26649:26649" # gRPC
      - "26650:26650" # REST

  nilauth:
    image: public.ecr.aws/k5d9x2g2/nilauth:ff0d9198d1b8819527bc036a58f875c4046b6f21
    depends_on:
      - nilauth-postgres
      - nilchain
    volumes:
      - ./docker/nilauth/config.yaml:/opt/config.yaml
    command: ["--config-file", "/opt/config.yaml"]
    ports:
      - "30921:30921" # main server
      - "30922:30022" # metrics server

  token-price-api:
    image: caddy:2
    ports:
      - "30923:80"
    command: |
      caddy respond --listen :80 --body '{"nillion":{"usd":1}}' --header "Content-Type: application/json"


volumes:
  postgres_data:
